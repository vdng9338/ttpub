[#ftl]
[#import "include/functions.ftl" as funct]
[#import "include/macros.ftl"    as macros]
[#assign columns   = timesTable.getTimePoints()?default("")]
[#assign rows      = timesTable.getTimeTable()?default("")]
[#assign footnotes = timesTable.getFootnotes()?default("")]
[#assign startDate = timesTable.getServiceStartDate()?default("")]
[#assign endDate   = timesTable.getServiceEndDate()?default("")]
[@macros.head title="C O N F I G U R E  -  ${timesTable.getRouteName()?default('')}" terminate=false/]
  <SCRIPT LANGUAGE="JavaScript" SRC="js/OptionTransfer.js"></SCRIPT>
  <SCRIPT LANGUAGE="JavaScript" SRC="js/Sugar.js"></SCRIPT>
  <SCRIPT LANGUAGE="JavaScript" SRC="js/Forms.js"></SCRIPT>
  <SCRIPT LANGUAGE="JavaScript">
  var opt = new OptionTransfer("stopsList", "${Parameters.ADD_TP_FORM}");
  opt.setAutoSort(false);
  </SCRIPT>
  <style media="all" type="text/css">
      @import url("css/site.css");
      @import url("css/screen.css");
  </style>
</head>
<body class="composite" onLoad="opt.init(document.forms[0])">
[@macros.showMessage /]

<FORM action="timetable.config" method="get"  onSubmit="return mySubmit(this, ttForms, ${Parameters.ADD_TP_FORM})">
   [@macros.navBar selectedPage="timetable.config" selectedData="${timesTable.getTableType()}" /]
   <input type="hidden" name="${Parameters.OLD_ROUTE}" value="${route?default("1")}"/>
   <input type="hidden" name="${Parameters.OLD_DIR}"   value="${dir?default("1")}"/>
   <input type="hidden" name="${Parameters.OLD_KEY}"   value="${key?default("W")}"/>
   <input type="hidden" name="${Parameters.OLD_DATE}"  value="${date?default("1-1-2006")}"/>
   [#if RequestParameters.method?exists ]
     <input type="hidden" name="${Parameters.METHOD}"  value="${RequestParameters.method}"/>
   [/#if]
   [#if hiddenInputList?exists ]
   [#list hiddenInputList as li]
     <input type="hidden" name="${li.getKey()}"  value="${li.getValue()}"/>
   [/#list]
   [/#if]
   [@macros.configRadioButtons/]
<br/>
<table>
<tr width="90%">
   <td width="50%">
     [@macros.routeDropDown routeList=routeList route=route submit=false/] 
     [#include "include/dateform.ftl"]
     [@macros.directionButtons dir1=timesTable.getDir() val1=timesTable.getDir() dir2=timesTable.getDir().getOpposite() val2=timesTable.getDir().getOpposite() selected=timesTable.getDir() /]
     [@macros.tmKeyButtons selected=key /]
   </td>
   <td>
      <br/>
   	  <a href="${"editor/routeconfig.edit?csvEditRoute&" + queryString?default("new=true")}">View/Edit All Configurations for this Route & Direction & Key</a> 
   	  <br/><br/>
	  [@macros.limiterButtonsOnEditTimepoint/]
   </td>
</tr>
</table>
<br/>
[@macros.stopSelectList destination=timesTable.getDestination() stopsList=timesTable.getRouteStops() showAll=timesTable.bypassConfig() rightForm=Parameters.ADD_TP_FORM /]
</FORM>
<br/>

<table>
<tr>
  <td id="ROUTE_NM">${timesTable.getRouteName()?default("please select a route")?html}</td>
  <td>
  [@macros.previewLinks queryString=queryString?default("new=true") htmlLink=true/]
  </td>
</tr>
<tr>
  <td id="KEY_NM">${timesTable.getKeyName()?html?default("")}</td>
  <td id="DIR_NM">${timesTable.getDestination()?html?default("")}</td>
</tr>
</table>

[#if columns?is_sequence && rows?is_sequence]
<table class="report">
  <thead>
  <tr>
    <th rowspan="3" title="Trip ID">Trip</th>
    <th rowspan="3" title="Block ID (unit of work performed by a vechicle). See InterliningNotes Configuration for commenting / joining blocks.">Block</th>
    <th rowspan="3" title="Trip's Service Key ID -- See ActiveServiceKey Configuration as to how you can add / drop these trips via the key.">Key</th>
    <th rowspan="3" title="Trip Type (eg: L, E or V - Limited, Express or Village). See TripNotes Configuration on how you can comment these trips.">TT</th>    
    [#list columns as cl]
      [#assign seq = cl.getSequence()?default( 1111 )]
      [#assign attribs = ""]
      [#assign title   = ""]
      [#assign id      = "NAME_${cl.getStopId()}"]
      [#if seq == Parameters.PHANTOM_SEQ]
         [#assign attribs = "id=\"PHANTOM\""]
         [#assign title = "NOTE: this is PHANTOM stop...times are interpolated from other stop times."]
      [#elseif timesTable.getAgencyName()?default("") == Parameters.TRIMET]
        [#-- This prevents TriMet stop names being editable via the Configure screen - eg: it's a lot better to change stop name via RenameStop.csv config when there are many changes --]
        [#assign attribs = "id=\"${id}\""]
        [#assign title = "NOTE: to change the name of this stop, use the RenameTimepoint configuration."]
      [#else]
        [#assign attribs = "id=\"${id}\" onDblclick=\"NAME_${cl.getStopId()}.putInput()\""]
      [/#if]
      [@stopHeaderElement content=cl.getDescription()?default("ERROR")?html stop=cl title=title otherAttributes=attribs/]
    [/#list]
    <th rowspan="3" title="Row Number">Row<BR/>Num</th>
  </tr>
  <tr>
    [#list columns as cl]
      [@stopIdElement stop=cl/]
    [/#list]
  </tr>
  <tr>      
    [#list columns as cl]
      [#assign seq = cl.getSequence()?default( 1111 )]
      [#assign attribs = ""]
      [#assign content = ""]      
      [#if seq == Parameters.PHANTOM_SEQ]
        [#assign attribs = "id=\"PHANTOM\""]
        [#assign content = "PHANTOM"]      
      [#else]
        [#assign attribs = "id=\"SEQ_${cl.getStopId()}\" onDblclick=\"SEQ_${cl.getStopId()}.putInput()\""]
        [#assign content = "${seq}"]      
      [/#if]
      [@stopHeaderElement content=content stop=cl otherAttributes=attribs/]
    [/#list]
  </tr>
  </thead>
  <tbody>
  [#assign N=columns?size - 1]
  [#assign rowNum = 1]
  [#list rows as rw]
    [#assign ttip = "Svc Runs: ${startDate} to ${endDate}"]   
    ${funct.getTr(rowNum, "odd", "even")}
      <td title="${ttip}">${rw.getTrip()?default("")}</td>    
      <td title="${ttip}">${rw.getBlock()?default("")}</td>
      <td title="${ttip}">${rw.getRawSvcKey()?default("")}</td>
      <td title="${ttip}">${rw.getTripType()?default("")}</td>
      [#list 0..N as i]
        <td title="Row #${rowNum}">${funct.getHtmlTime(rw, i)}</td>
      [/#list]
      <td title="${ttip}">${rowNum}</td>    
    </tr>
    [#assign rowNum = 1 + rowNum]
  [/#list]
  </tbody>
</table>
[#if footnotes?is_sequence]
FootNotes:
  <table class="footnotes">
  [#list footnotes as fn]
  <div align="left">
  <tr class="even">
    <td id="FSYM_${fn.getId()}"  >${fn.getSymbol()?default(" ")?js_string}</td>
    <td id="FNOTE_${fn.getId()}" ><div align="left">${fn.getFormattedNote()?js_string}</div></td>
  </tr>
  </div>
  [#-- IF the formatted note is different than the note, show the formatted note --]
   
  [#if fn.getFormattedNote() != fn.getNote() ]
  <div align="left">
  <tr class="odd">
    <td id="FSYM_${fn.getId()}"  >${fn.getSymbol()?default(" ")?js_string}</td>
    <td id="FNOTE_${fn.getId()}" ><div align="left">${fn.getNote()?js_string}</div></td>
  </tr>
  </div>
  <tr/>
  [/#if]

  [/#list]
  </table>
[/#if]
[/#if]
</body>
[#macro stopIdElement stop]
    [#assign color   = ""]
    [#assign content = "Stop ID: " + stop.getStopId()]
    [#if stop.hideStopId()]
        [#assign color   = "blue"]
        [#assign content = "HIDDEN: " + stop.getStopId()]
    [/#if]
    [@stopHeaderElement content=content stop=stop color=color/]
[/#macro]

[#macro stopHeaderElement content stop title="" otherAttributes="" color=""]
      [#assign colorAttribute = ""]
      [#assign titleString = title]
      [#if !stop.isPublic()]
         [#assign colorAttribute = "color=\"red\""]
         [#assign titleString = "IMPORTANT: ${stop.getStopId()} is NOT a PUBLIC stop."]
      [/#if]
      [#if color?has_content]
         [#assign colorAttribute = "color=\"${color}\""]
      [/#if]            
      <th ${otherAttributes} title="${titleString}"><font ${colorAttribute}>${content}</font></th>
[/#macro]

[#if columns?is_sequence && rows?is_sequence]
<SCRIPT LANGUAGE="JavaScript">
  //
  // the below Forms var(s) allow for both the dbl-click dynamic interface (note: form only appears after dbl click),
  // AND, more importantly, submit checking, such that ONLY those time-table forms which have been changed by the 
  // user are sent to the server. This makes for a much cleaner application -- esp on the server side, as we're 
  // not comparing (eg: guessing) what the user has changed.  If we didn't have such checks, we'd not know what
  // data to save in the database, etc...  This is especially important, since much of the data comes from tables
  // we don't have control over, and we don't want to duplicate the storage of that data if it isn't changed by the
  // user.
  //
  // NOTE: the js_string is to escapse the strings for javascript.
  //
  // See Forms.js: constructor is Forms(both the var name / and element id, input form id, default text, size, form array); 
  //
  var ttForms = new Array();

  [#list columns as cl]
    [#assign seq = cl.getSequence()?default( 1111 )]
    [#if seq != Parameters.PHANTOM_SEQ]
    var NAME_${funct.getProperElementName(cl.getStopId())} = 
      new Forms('NAME_${cl.getStopId()}', '${Parameters.STOP_NAME_}${cl.getStopId()}', '${cl.getDescription()?default("")?js_string}', '15', ttForms);
    var SEQ_${funct.getProperElementName(cl.getStopId())}  = 
      new Forms('SEQ_${cl.getStopId()}',  '${Parameters.STOP_SEQ_}${cl.getStopId()}',  '${seq}', '3',  ttForms);
    [/#if]
  [/#list]
</SCRIPT>
[/#if]
</html>
